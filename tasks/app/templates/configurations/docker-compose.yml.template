version: '3.5'

services:  

  rabbit:
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: {{ mq_user }}
      RABBITMQ_DEFAULT_PASS: {{ mq_passwd }}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  db:
    image: ssfdust/psql_jieba_swsc:latest
    ports:
      - "9432:5432"
    environment:
      POSTGRES_USER: {{ '${POSTGRES_USER:-' + db_username + '}' }}
      POSTGRES_PASSWORD: {{ '${POSTGRES_PASSWORD:-' + db_password + '}' }}
      POSTGRES_DB: {{ '${POSTGRES_DB:-' + db_name + '}' }}
      PGDATA: /data/postgres

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - ./scripts/mongo:/docker-entrypoint-initdb.d/
    environment:
      MONGO_INITDB_DATABASE: {{ '${MONGO_INITDB_DATABASE:-' + mongo_db + '}' }}
      MONGO_INITDB_ROOT_USERNAME: {{ '${MONGO_INITDB_ROOT_USERNAME:-' + mongo_user + '}' }}
      MONGO_INITDB_ROOT_PASSWORD: {{ '${MONGO_INITDB_ROOT_PASSWORD:-' + mongo_passwd + '}' }}
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo mongo:27017/test --quiet 1
      interval: 10s
      timeout: 10s
      retries: 5
      start_period: 40s

  web:
    image: ssfdust/full-stack-flask-smorest:latest
    volumes:
      - .:/Application 
    ports:
      - "9001:5000"
    restart: on-failure
    depends_on:
      - rabbit
      - db
      - mongo

  worker:
    image: ssfdust/full-stack-flask-smorest:latest
    command: inv app.celery
    restart: on-failure
    volumes:
      - .:/Application
    depends_on:
      - rabbit
      - db
      - mongo

  beat:
    image: ssfdust/full-stack-flask-smorest:latest
    command: inv app.celery.beat
    restart: on-failure
    volumes:
      - .:/Application
    depends_on:
      - rabbit
      - db
      - mongo
